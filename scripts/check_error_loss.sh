#!/bin/bash
workdir=$(cd `dirname $0`; pwd)
# echo "当前的工作路径是:" $workdir
# cd $workdir

if [ $# -ne 2 ]; then
    echo "Usage:   ./check_error_loss.sh <base data> <target data>";
    echo "Example: ./check_error_loss.sh double.res  amp_0.res";
    echo "Note:    the script needs two files (which is generated by -DPOLYBENCH_DUMP_ARRAYS). ";
    exit 1;
fi;


# 初始化一些参数
base_file=$1
target_file=$2
line_index=0
# 记录存在误差元素的数量，误差之和
count=0
sum=0.0
mean=0.0
# 记录最大绝对误差的位置及其大小
max_error=-1.00
row=0
col=0


# 把文件读取到文件描述符中
exec 3<$base_file
exec 4<$target_file
# 通过与操作符进行连接，完成多文件操作，同时操作多个文件对应的每一行
while read base <&3 && read target <&4 ;
do
    line_index=`expr $line_index + 1`;
    # echo "行索引是: $line_index";

    if [[ "$base" == "$target" ]];
    then 
        # echo "本行相等，行索引是: $line_index";
        # echo "Base   is $base";
        # echo "Target is $target";
        continue;
    # 如果这行字符串不相等，就计算误差
    else
        # 分割结果到数组中
        base_arr=($base);
        target_arr=($target);
        # 获取数组的大小
        number=${#base_arr[@]};
        # echo $number

        # 遍历数组
        for((i=0;i<$number;i++));
        do
            # echo "${base_arr[$i]} ${target_arr[$i]}";
            error=$(echo ${base_arr[$i]} ${target_arr[$i]} | awk '{printf("%.10f",$1 - $2)}');
            # 如果误差小于0，则取反
            error=$(echo ${error} | awk '{ if ($1 < 0.0) printf("%.10f",$1 * -1.0); else printf("%.10f",$1); }');
            # error=`echo "a=$error - 0.0;if(0>a)a*=-1;a" | bc`;
            # echo $error

            # 判断是否存在误差
            if [ $(echo "$error>0.0"|bc) -eq 1 ]; 
            then
                count=`expr $count + 1`;
                sum=$(echo $sum $error | awk '{printf("%.10f",$1 + $2)}');
                # echo "存在误差: $error ,其行号是: $line_index , 其列号是: $i .";
                # echo "count为: $count , sum 为: $sum ." ;
            fi
            # 判断是否大于最大误差,如果是更新最大误差
            if [ $(echo "$error>$max_error"|bc) -eq 1 ]; 
            then
                max_error=$error;
                row=$line_index;
                col=$i; 
                # echo "更新最大误差为: $error, 其行号是: $line_index, 其列号是: $i .";
            fi
        done
    fi
done

# 计算平均绝对误差
mean=$(echo $sum $count | awk '{printf("%.10f",$1 / $2)}');
echo "error cout: $count, error sum: $sum, error mean: $mean, error max: $max_error in($row,$col)." ;